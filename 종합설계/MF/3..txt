미디어 파운데이션을 이용해 파일을 재생하기 위해 알고 있어야 하는 개념
-----------------------------------------------------------------------------------------------
Media Session -> IMFMediaSession

 - 파이프 라인에서 데이터 흐름을 관리하는 개체 파일 재생 및 인코딩을 모두 사용할 수 있다.

 - 보호된 미디어(DRM)를 지원을 지원하는지 여부에 따라 미디어 세션 생성 방법이 바뀐다.
	- MFCreatMediaSession, MFCreatPMPMediaSession

 - 미디어 세션을 사용하는 모든 응용 프로그램들은 다음과 같은 일반적인 단계를 따릅니다.
 	. 토폴로지를 만듭니다. IMFMediaSession::SetTopology를 호출하여 미디어 세션에서 토폴로지를 큐에 대기합니다.
	. ::Start, Pause, Stop을 사용해 데이터 흐름을 제어합니다.
	. ::Close,  IMFMediaSource::Shutdown 을 호출하여 종료해 줍니다.
	* 미디어 세션을 사용 하는 경우 응용 프로그램은 미디어 원본을 직접 시작, 일시 중지 또는 중지 하면 안 됩니다. 



Source Resolver
 - Source Resolver는 URL 또는 바이트 스트림을 사용하고 해당 콘텐츠에 적합한 미디어 원본을 만듭니다.
 - Source Resolver는 애플리케이션에서 미디어 원본을 만드는 표준 방법입니다.
 - MFCreateSourceResolver을 사용해  IMFSourceResolver 객체를 생성하고
 - IMFSourceResolver::CreateObjectFromURL, IMFSourceResolver::CreateObjectFromByteStream 을 이용해 미디어 원본을 만듭니다.
 - 비동기 메서드로는 BeginCreateObjectFromURL, BeginCreateObjectFromByteStream 이렇게 있습니다.
 - Source Resolver을 사용하여 미디어 원본을 만드는 경우 구성 속성이 포함된 속성 저상소를 지정할 수 있습니다. 이 속성은 미디어 원본을 초기화하는데 사용됩니다.

Topology
 - 토폴로지는 파이프라인의 데이터 흐름을 나타내는 개체입니다. 
 - 응용 프로그램은 토폴로지를 사용하여 미디어 세션을 위한 파이프라인을 준비합니다. ??
아직 이해안됨
https://docs.microsoft.com/ko-kr/windows/win32/medfound/about-topologies  

재생 토폴로지 만들기
https://docs.microsoft.com/ko-kr/windows/win32/medfound/creating-playback-topologies

Media Event Generators
 - 미디어 개체에서 응용 프로그램에 개체 상태변경 내용을 알려주기 위한 방법
 - IMFMediaEventGenerator:: GetEvent, IMFMediaEventGenerator:: BeginGetEvent -> 동기, 비동기

Presentation Descriptors

 - 미디어 세션은 프레젠테이션 상태 변경(재생, 일시 중지 및 중지)과 같은 전송 컨트롤을 제공해야 합니다. 
 - 재생상태를 변경하기 위해 호출해야하는 미디어 세션 메서스를 Presentation Descriptors라 합니다.
 - IMFMediaSession::Pause, Start, Stop등의 메서드입니다.
-----------------------------------------------------------------------------------------------

EVR(Enhanced Video Renderer) -> 사용자의 모니터에 비디오를 표시하는 구성요소
SAR(Streaming Audio Renderer)-> 오디오를 스피커 또는 다른 오디오 출력 디바이스에 표시하는 ㄱ성요소

-----------------------------------------------------------------------------------------------
코드 설명

WM_APP_PLAYER_EVENT -> 개인 창 메시지를 정의 - 미디어세션 이벤트에 대해 응용 프로그램에 알리는 데 사용됨
enum PlayerState -> Player의 가능한 상태를 정의

CPlayer----------------------------------------------------------------------------------------
CPlayer 클래스는 미디어 세션에서 이벤트 알림을 가져오는데 사용되는 IMFAsyncCallback 인터페이스를 상속함

생성자 : CPlayer::CreateInstance(...)정적 메서드를 호출해 클래스의 인스턴스를 만든다.
소멸자 : CPlayer클래스는 IUnknown을 상속하는 인터페이스를 상속해 만들어 지므로 개체는 참조 횟수를 통해 제어 된다.
미디어 세션과 미디어 원본을 모두 관리한다.

HRESULT CPlayer::CreateInstance(
    HWND hVideo,                  // 비디오를 표시할 창
    HWND hEvent,                  // 이벤트를 수신할 창 (비디오 창과 동일한 핸들을 전달해도 된다.)
    CPlayer **ppPlayer)           // Receives a pointer to the CPlayer object.
{
	...
	HRESULT hr = pPlayer->Initialize(); // MFStartup(미디어 파운데이션 플랫폼 초기화), CreateEvent호출
	...
}

HRESULT CPlayer::OpenURL(const WCHAR *sURL)
{
	1.
	CPlayer::CreateSession()을 호출하여 미디어 새션의 새 인스턴스를 만든다.
		MFCreateMediaSession(...), Session->BeginGetEvent(..);
	2.
	CPlayer::CreateMediaSource(...)을 호출하여 미디어 원본을 만든다.
		URL에서 만들기 때문에 우선 SourceResolver를 MFCreateSourceResolver함수를 이용해 만든다.
		SourceResolver를 이용해 URL에서 미디어 원본을 만든다.
		만든 미디어 원본을 IUnknown::QueryInterface를 이용해 ppSource가 가르키도록한다.
	3.
	(IMFMediaSource)m_pSource->CreatePresentationDescriptor(..)를 호출해 미디어 소스의 
	Presentation Descriptors를 가져온다.
   	
	4. 재생 토폴로지를 만들고 Set한다.
}

**동영상을 재생하는 클라이언트에서 이벤트 처리하려면 꼭 알아야 될 부분같음
미디어 세션 이벤트 처리

-----------------------------------------------------------------------------------------------
































